synapse stdp_stp:

  state:
    w real = 0. @nest::weight  # 1.?
    u real = U  # facilitation
    x real = 1.  # depression
  end

  parameters:
    d ms = 1. ms  @nest::delay  # !!! cannot have a variable called "delay"

    # STP
    U real = random_normal(0.5, 0.25)
    tau_d ms = random_normal(110 ms, 55 ms)     # depression timescale
    tau_f ms = random_normal(5 ms, 2.5 ms)    # facilitation timescale

    # STDP
    tau_rise ms = 2 ms
    tau_decay ms = 20 ms
    c real = 0.05 * exp(5)
  end

  equations:
    # STP
    u' = (U - u) / tau_f
    x' = (1 - x) / tau_d

    # STDP
    kernel decay_time_kernel = exp(-t / tau_decay)
    kernel rise_time_kernel = exp(-t / tau_rise)
    inline y real = convolve(decay_time_kernel, pre_spikes) - convolve(rise_time_kernel, pre_spikes)
  end

  input:
    pre_spikes nS <- spike
    post_spikes nS <- spike
  end

  output: spike

  onReceive(post_spikes):
    w_diff real = y * c * exp(-w) - 1
    w += w_diff
  end

  onReceive(pre_spikes):
    w += 0  # this is needed, otherwise NESTML complains for some weird reason
    w_eff real = u * x * w                # compute effective weight changing the conductance

    x -= x * u                            # STD
    u += U * (1 - u)                      # STF

    deliver_spike(1.0, d) # TODO replace 1.0 with w_eff
  end
end
